// Code generated by reinforcer, DO NOT EDIT.

package reinforced

import "context"

type targetClient interface {
	SayHello(ctx context.Context, arg1 string) error
}
type Client struct {
	*base
	delegate targetClient
}

func NewClient(delegate targetClient, runnerFactory runnerFactory) *Client {
	if delegate == nil {
		panic("provided nil delegate")
	}
	if runnerFactory == nil {
		panic("provided nil runner factory")
	}
	return &Client{
		base: &base{
			errorPredicate: RetryAllErrors,
			runnerFactory:  runnerFactory,
		},
		delegate: delegate,
	}
}
func (c *Client) SayHello(ctx context.Context, arg1 string) error {
	var nonRetryableErr error
	err := c.run(ctx, "SayHello", func(ctx context.Context) error {
		var err error
		err = c.delegate.SayHello(ctx, arg1)
		if c.errorPredicate("SayHello", err) {
			return err
		}
		nonRetryableErr = err
		return nil
	})
	if nonRetryableErr != nil {
		return nonRetryableErr
	}
	return err
}
